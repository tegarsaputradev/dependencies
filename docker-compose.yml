version: "3.9"

services:
  mongodb:
    container_name: mongodb
    image: mongodb-8
    build:
      context: ./mongo/
      args:
        MONGO_VERSION: 8.0
    environment:
      MONGO_REPLICA_HOST: 127.0.0.1
      MONGO_REPLICA_PORT: 2192
      # Use "mongosh" instead of "mongo" for v5+
      MONGO_COMMAND: "mongosh"
    ports:
      - "2192:2192"
    volumes:
      - ./data/mongo:/data/db
    restart: unless-stopped
    healthcheck:
      # Use "mongosh" instead of "mongo" for v5+
      test:
        [
          "CMD",
          "mongosh",
          "admin",
          "--port",
          "2192",
          "--eval",
          "db.adminCommand('ping').ok",
        ]
      interval: 5s
      timeout: 2s
      retries: 20

  mysql:
    image: mysql:latest
    container_name: mysql
    environment:
      MYSQL_ROOT_PASSWORD: 5nP0eh1Gis9697aGGWPLR8p16mglbFTzuOhsn8oz6P3Qklkjsd
      MYSQL_USER: ggwp
      MYSQL_PASSWORD: ggwp
    restart: always
    ports:
      - "3192:3306"
    volumes:
      - ./data/mysql:/var/lib/mysql

  phpmyadmin:
    image: phpmyadmin/phpmyadmin
    container_name: pma
    links:
      - mysql
    environment:
      PMA_HOST: mysql
      UPLOAD_LIMIT: 512M
    restart: always
    ports:
      - 4192:80

  redis:
    image: redis:7-alpine
    container_name: redis
    restart: always
      #command: redis-server --requirepass ggwp
    ports:
      - 6379:6379
    volumes:
      - ./data/redis:/data

  localstack:
    container_name: "s3-Localstack"
    image: localstack/localstack
    ports:
      - "127.0.0.1:4566:4566"            # LocalStack Gateway
      - "127.0.0.1:4510-4559:4510-4559"  # external services port range
    environment:
      # LocalStack configuration: https://docs.localstack.cloud/references/configuration/
      - DEBUG=0
      - PERSISTENCE=1
    volumes:
      - "./data/localstack:/var/lib/localstack"
      - "/var/run/docker.sock:/var/run/docker.sock"
